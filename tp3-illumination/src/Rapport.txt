Q1: On pourrait vouloir que la texture de l'échiquier se « déplace » sur
    l'objet en fonction du temps, comme si elle glissait sur la surface dans
    une direction donnée. Comment implanteriez-vous cette fonctionnalité?

Réponse:
    L'image à laquelle correspond une texture est représentée par un carré de
    dimensions [0,1] x [0,1]. Lorsqu'on veut afficher une texture, on assigne 
    à chaque sommet des coordonnées en 2D allant de 0 à 1 représentant un pixel 
    de la texture. La valeur de ces coordonnées est interpolé pour chaque fragment 
    et le fragment prend la couleur de la texture au point mentionné. Il suffit
    donc d'ajouter deux 'offsets' globaux (x et y) qui sera appliqué à chaque sommet
    en s'assurant que les valeurs supérieurs à 1 retourne à 0 et vice-versa. Lorsque
    la scène est en mouvement, on incrémente d'une valeur quelconque offsetX et 
    offsetY, ce qui va donner l'impression que la texture glisse sur la surface.



Q2: Vous avez probablement remarqué que même en demandant un très grand
    niveau de tessellation, le générateur de tessellation ne produira pas
    une tessellation plus fine que le niveau maximum donné par la constante
    GL_MAX_TESS_GEN_LEVEL.  (On peut obtenir la valeur de cette constante
    avec glGet() et elle doit être au moins 64.)
    Que doit-on alors faire si on veut, malgré tout, une tessellation deux
    fois plus fine dans chaque direction?

Réponse:
    Une solution possible serait de représenter chaque face du dé par 4 carrées
    au lieu de 1 seul. Il suffirait d'ajouter 5 sommets (1 au centre de chaque 
    arrête et une au milieu du carré) et les connections nécessaires, ainsi,
    chaque 'sous-carré' pourrait avoir une tessellation aussi fine que la face
    initiale. La face aurait donc une tessellation deux fois plus fine dans
    chaque direction. Cependant, avec des niveaux de tessellation externes et 
    internes très différent, les 4 carrées d'une face serait facilement discernable
    ce qui n'est pas souhaité.
